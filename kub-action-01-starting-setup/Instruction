1. docker build -t kub-first-app .

2. minikube status if it is offline "minikube start"

3. kubectl help

4. kubectl create deployment first-app --image=kub-first-app
5 let's check if it works! (not ready) 
    kubectl get deployments or using kubectl get pods
it doesn't work correctly

6. we need to delete the deployment first
kubectl delete deployment first-app

To do so, we should create a repository in docker hub
==> tonyhomsi/kub-first-app, then
a. docker tag kub-first-app tonyhomsi/kub-first-app
b. docker push tonyhomsi/kub-first-app

then run:kubectl create deployment first-app --image=tonyhomsi/kub-first-app

now check: kubectl get pods
It works

To check more:
minikube dashboard


############# The "Service" Object #############
We need to create a service in order to make the IP address for the pod available 

Let's run minikube dashboard, then open a new terminal

kubectl expose deployment first-app --type=LoadBalancer --port=8080

check if it works: 
 kubectl get services

 we don't have an external IP address to reach pods outside, so:
 minikube service first-app,

 It works correctly and perfectly on the web browser!


 ### The container in the pod is being monitored and if it's fails, it'll restart ##

 We could assign how many times(3) we would like to restart our container:
 kubectl scale deployment/first-app --replicas=3
 kubectl get pods


#### Updating the deployment #####
let's do some changes in app.js file
we need to update our image:
1. docker build -t tonyhomsi/kub-first-app .
2. kubectl get deployments
3. docker push tonyhomsi/kub-first-app

to update the deployment:
> kubectl set image deployment/first-app kub-first-app=tonyhomsi/kub-first-app 
where:kub-first-app is the <image_name>
> minikube dashboard 
There are no different! to do so we need to add a tag when we build our image, for example:
docker build -t tonyhomsi/kub-first-app:2 .
docker push tonyhomsi/kub-first-app:2
kubectl set image deployment/first-app kub-first-app=tonyhomsi/kub-first-app:2

kubectl rollout status deployment/first-app

## let's try something to see how it fails###
let's try to update deployment with using an image that is not exist
kubectl set image deployment/first-app kub-first-app=tonyhomsi/kub-first-app:3
kubectl rollout status deployment/first-app
to fix that we need to rollback
kubectl get pods
kubectl rollout undo deployment/first-app
kubectl get pods

it's gone

But if we would like to go to old deployment and use it:;
> kubectl rollout history deployment/first-app then:
> kubectl rollout history deployment/first-app --revision=3

Now to use specific and old one: 
kubectl rollout undo deployment/first-app --to-revision=1