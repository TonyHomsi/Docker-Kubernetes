1. Create a docker file
2. Build an image with the name feedbak-node: run > docker build -t feedback-node .
3. docker run -p 3000:80 -d --name feedback-app --rm feedback-node

When you delete a container all the data that you stored or added will be removed! That is a problem!!
The Solution is VOLUMES, 
Volumes are folders on your host machine hard drive which are mounted(made available) into containers

4. add to docker file
VOLUME [ "/app/feedback" ]

5. then re-build > docker build -t feedback-node:volumes .
6. docker run -d -p 3000:80 --rm --name feedback-app feedback-node:volumes
 something went wrong !!! 

7. docker logs feedback-app

8. modify server.js file

9. repeat steps 5 & 6 

To check our main problem is solved:
10. docker stop container // the container should remove the data I have saved in the website but the volumes keep it :)
11. docker run -d -p 3000:80 --rm --name feedback-app feedback-node:volumes

// Still there is a problem :D :D
There are two types of External Data Storages:
 a. Volumes (managed by Docker)
 b. Bind Mounts (Managed by me)

 To fix this:
 stop the container then remove the image and rebuild again! > docker build -t feedback-node:volumes .
 Now the run the container but add some other flags
 > docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback feedback-node:volumes



 Now you just start piling up a bunch of unused anonymous volumes - 
 you can clear them via > docker volume rm VOL_NAME or > docker volume prune


 ################################ Getting Started with bind Mounts ##############################
 You can change html file and see the result directly without rebuilding the image
> docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback -v "my_path_without_fileName.js:/app"feedback-node:volumes
If you don't always want to copy and use the full path, you can use these shortcuts: Windows: -v "%cd%":/app

ERROR could happen

Remove first --rm to keep the container and check for the ERROR

> docker logs feedback-app

to fix that!
docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback -v 
"my_path_without_fileName.js:/app" -v /app/node_modules feedback-node:volumes


**********NOTE*********************
Run the command above using CMD NOT BASH

Create Read only Volumes :ro and add -v /app/temp to make sure it really overwrite this bind mount
docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback -v 
"my_path_without_fileName.js:/app:ro" -v /app/node_modules -v /app/temp feedback-node:volumes