
########## Adding Docker Networks for Efficient Cross-Container Communication ########
1. docker network create goals-net
2. docker run --name mongodb --rm -d -p 27017:27017 mongo // You don't need to publish the -p 27017:27017 
because they are in the same network ==>
2. docker run --name mongodb --rm -d --network goals-net mongo

Let's go to the backend direction:
1. docker run --name goals-backend --rm -d -p 80:80 goals-node //You don't need to publish the -p 27017:27017 
because they are in the same network ==>
1. docker run --name goals-backend --rm -d --network goals-net goals-node
// It'll fail because app.js has a connection to host.docker.internal not to a port ==>
mongoose.connect(
  'mongodb://mongodb:27017/course-goals',
  {

Build the image again:
1. docker build -t goals-node . then run 
2. docker run --name goals-backend --rm -d --network goals-net mongo

Now Go to the frontend part and change the App.js from 'http://localhost/goals to 'http://goals-backend/goals

then rebuild the image: 
1. docker build -t goals-react .
2. docker run --name goals-frontend --network goals-net --rm -d -p 3000:3000 -it goals-react
Something went wrong!

React works on the browser not on the server side like mongoDB, to fix this let's go back to App.js
then: 
1. docker build -t goals-react . 
// Remove --network goal-net because it's doesn't make sence
2. docker run --name goals-frontend --rm -d -p 3000:3000 -it goals-react
Go back to backend part and stop the container goals-backend then run and publish -p 80:80
docker run --name goals-backend --rm -d -p 80:80 --network goals-net goals-node


##########
If we stop the container and re-run it again, we know notice that our data is removed 
and not stored (because the container will be removed once you stop it), so we need to find a way that store our data temprorly!
and Volume will help to fix this issue!


1. docker run --name mongodb -v data:/data/db --rm -d --network goals-net mongo
2. Adding security:
 a. docker stop mongodb
 b. docker run --name mongodb -v data:/data/db --rm -d --network goals-net -e MONGO_INITDB_ROOT_USERNAME=Tony -e MONGO_INITDB_ROOT_PASSWORD=secure mongo
  FAILED because the connection in MongoDB(app.js) has a different link!
 mongoose.connect(
  'mongodb://mongodb:27017/course-goals',
  {

      ====>>>

      mongoose.connect(
  'mongodb://Tony:secure@mongodb:27017/course-goals',
  {

    then stop: docker stop goals-backend

rebuild the image again:
docker build -t goals-node .
docker run --name goals-backend --rm -p 80:80 --network goals-net goals-node
