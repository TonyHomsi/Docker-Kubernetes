To list all the container
    + docker ps

To list all the container including the one is stopped
    + docker ps -a

To restart using the stop containers, simply run
    + docker start <name of the container>

To run the image.id with a container add (-d) Detached => 
the result shows that you can stil type or run a command in the terminal  
    + docker run -p 8000:80 -d <image.id>
to disable this feature simply run:
    + docker attach <name_container>

To see all the log from the container
    docker logs <name_container>
But to see the exact running time what is going on add -f
    docker logs -f <name_container>

To restart the stop container in the attached mode 
    docker start -a <name_container>

##########################################################################
By default, if you run a Container without -d, you run in "attached mode".

If you started a container in detached mode (i.e. with -d), you can still attach to it afterwards without restarting the Container with the following command:

docker attach CONTAINER
attaches you to a running Container with an ID or name of CONTAINER.
##########################################################################


###############################################################
To remove Containers and images
1. Stop the container is running then
 => docker rm <container_name>

To remove images
1. list the images that you have by: 
 docker images
2. docker rmi <image_id> .... // Note YOU must remove the container first (The unused one)
Use --force to remove the images forcely 


To remove the containers automatically:
Once you run it and then stop it, it'll remove automatically
docker run -p 3000:80 -d --rm <image_id> //It's not commom do that because you need then re-build the project


To get information about the images
docker image inspect <image_id>


To add a new name for the container
docker run -p 3000:80 -d --rm --name tony <image_id>

Images Tags
 name: Tag
ex: 
 node: 14 // 14:version

or tun the command
> docker build -t tony:latest .
> docker images

you can now the start rnning the container based on the new name image
> docker run -p 3000:80 -d --rm --name eddy tony:latest

to remove all the images including the tags:
> docker image prune -a
